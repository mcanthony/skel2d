- preview features
  - multiple viewports
  - translate/zoom
  - select animation (or setup pose)
  - select skin
  - animation controls (play, pause, seekbar)
  - show keyframes
  - tooltip information for the keyframes
  - show/hide bones
- ui design
- what to do when opening the app in multiple tabs?
- figure out a way for saving, loading and sharing using local storage, file api and gists api
- where to save images?
- figure out how to import images from computer (drop a folder? maybe a zip)
- core: inverse kinematics
- core: add more easing functions
- core: custom easing functions (using a spline or something)
- core: draw order animations
- renderer: add sprite rendering
- renderer optimization: static shapes can be stroked only once, then just transform vertices
- renderer: support for arbitrary closed paths when they are static (check libtess2)
- ability to flatten easing functions (convert to a list of lerps)

x parser: different blocks of the same type/name should be merged together (i.e. two anims with same name)
x refactor ace syntax mode (everything repeats)
x parser: flip-x flip-x timelines are missing (s,t)
x parser: skins
x parser: default bone color
x parser: draw order
x parser: easing func should be set to the previous frame
x editor: animations syntax highlighting
x parser: timeline attachment value regex doesn't allow numbers in name (i think)
x parser: remove empty timelines
x parser: convert color animations
x parser: translate timeline property names
x parser: animations/timelines
x editor: syntax highlighting
x parser timeline commands: make easing a number that indexes some array
x check ace key bindings and remove useless crap (like ctrl+, for settings)
x always check that first path command is M (added in core loader)
x tokenizer: ending \ on start and skeleton states
x tokenizer: path commands
x renderer: shape anchor at center
x renderer: improve bone rendering so bones with no length are visible
x renderer/core: add bone colors
x renderer/core: add miter limit
x parser: border_radius shortcut in rect attachment
x parser: create implicit parent bones
x test slot animations
x test attachment transform on paths.. what i did is probably not useful. better if the transform
  is applied relative to the main bone
x implement attachments
x figure out how to do shape attachments (splines, rectangles, circles, etc)
x make webgl renderer
x strip down gfx.js to just what is needed
x path: add fill without stroke (just flatten and add points to vbo)
x path: check if point equals previous one when pushing points
x path: check if first and last points are equal when shape is closed
x implement slots and slots animations
x timeline val_flip
x load skeleton and animations from data object
x test flipping, it's probably fucked up too
